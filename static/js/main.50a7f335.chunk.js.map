{"version":3,"sources":["components/Card/styles.js","components/Card/index.tsx","components/Arrow/index.tsx","model/cards.ts","model/palettes.ts","Views/MainView/styles.js","Views/MainView/index.tsx","Views/OctopusView/styles.js","components/OctopusCard/styles.js","components/OctopusCard/index.tsx","Views/OctopusView/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Title","styled","h1","number","color","Subtitle","Card","model","palette","title","icon","size","subtitle","Arrow","direction","onClick","Button","variant","faArrowUp","faArrowDown","faArrowRight","faArrowLeft","getIcon","arrow","Cards","faDeaf","faDragon","faThumbsUp","faThumbsDown","faVolumeMute","faLightbulb","faHandPointRight","faHandPointUp","faEllipsisH","faQuestion","OctopusCards","Palettes","background","getPalette","Math","floor","random","length","Container","bootstrap","Row","Col","MainView","useState","current","setCurrent","curPalette","setCurPalette","card","max","fluid","next","value","xs","Image","img","OctopusCard","src","process","OctopusView","App","basename","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.50a7f335.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-weight: bolder;\n  font-size: ${({number}) => number ? '10em' : '4em' };\n  padding-bottom: 40px;\n  color: ${({color}) => color ? color : '#000'}\n`;\n\nexport const Subtitle = styled.h1`\n  font-size: 2em;\n  padding-top: 60px;\n`;\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CardModel } from '../../model/cards';\n\nimport { Title, Subtitle } from './styles';\nimport { PaletteModel } from '../../model/palettes';\n\ntype CardProps = {\n  model: CardModel,\n  palette?: PaletteModel,\n};\n\nconst Card = ({model, palette}: CardProps) => {\n\n  return (\n    <div>\n      <Title color={palette?.title} number={model.number}>{model.title}</Title>\n      <FontAwesomeIcon icon={model.icon} size={ model.number ? \"2x\" : \"8x\"} color={palette?.icon}/> \n      <Subtitle color={palette?.subtitle}>{model.subtitle}</Subtitle>\n    </div>\n  )\n}\n\nexport default Card;\n","import React, { FunctionComponent } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowDown, faArrowUp, faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\nimport { PaletteModel } from '../../model/palettes';\n\ntype ArrowProps = {\n  direction: string,\n  onClick?: any,\n  palette?: PaletteModel,\n}\n\nconst UP = 'up';\nconst DOWN = 'down';\nconst RIGHT = 'right';\nconst LEFT = 'left';\n\nconst Arrow = ({ direction = 'up', palette, onClick}: ArrowProps) => {\n  const getIcon = () => {\n    switch (direction) {\n      case UP: return faArrowUp;\n      case DOWN: return faArrowDown;\n      case RIGHT: return faArrowRight;\n      case LEFT: return faArrowLeft;\n      default: return faArrowUp;\n    }\n  }\n\n  return (\n    <Button variant=\"link\" onClick={onClick}>\n      <FontAwesomeIcon icon={getIcon()} size=\"2x\" color={palette?.arrow} />\n    </Button>\n  )\n}\n\nexport default Arrow;\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { faDeaf, faDragon, faThumbsUp, faThumbsDown, faVolumeMute, faLightbulb, faHandPointUp, faHandPointRight, faQuestion, faEllipsisH } from '@fortawesome/free-solid-svg-icons'\n\nexport interface CardModel {\n    title?: string;\n    subtitle?: string;\n    icon: IconProp;\n    number?: boolean;\n};\n\nexport const Cards: CardModel[] = [\n    { \n        title: `Can't hear you`,\n        subtitle: '',\n        icon: faDeaf,\n    },\n    { \n        title: 'ELMO!',\n        subtitle: `(enough, let's move on)`,\n        icon: faDragon,\n    },\n    { \n        title: 'YES!',\n        subtitle: '',\n        icon: faThumbsUp,\n    },\n    { \n        title: 'NO!',\n        subtitle: '',\n        icon: faThumbsDown,\n    },\n    { \n        title: `You're on mute`,\n        subtitle: '',\n        icon: faVolumeMute,\n    },\n    { \n        title: 'Great idea!',\n        subtitle: '',\n        icon: faLightbulb,\n    },\n    { \n        title: 'NEXT',\n        subtitle: '',\n        icon: faHandPointRight,\n    },\n    { \n        title: 'I volunteer',\n        subtitle: '',\n        icon: faHandPointUp,\n    },\n    {\n        icon: faEllipsisH,\n        title: '1',\n        number: true,\n    },\n    {\n        icon: faEllipsisH,\n        title: '2',\n        number: true,\n    },\n    {\n        icon: faEllipsisH,\n        title: '3',\n        number: true,\n    },\n    {\n        icon: faEllipsisH,\n        title: '4',\n        number: true,\n    },\n    {\n        icon: faEllipsisH,\n        title: '5',\n        number: true,\n    },\n    {\n        icon: faQuestion,\n    }\n];\n\nexport const OctopusCards: CardModel[] = [\n    {\n        icon: faEllipsisH,\n        title: '1',\n        number: true,\n    },\n    {\n        icon: faEllipsisH,\n        title: '2',\n        number: true,\n    },\n    {\n        icon: faEllipsisH,\n        title: '3',\n        number: true,\n    },\n    {\n        icon: faEllipsisH,\n        title: '4',\n        number: true,\n    },\n    {\n        icon: faEllipsisH,\n        title: '5',\n        number: true,\n    },\n    {\n        icon: faEllipsisH,\n        title: '6',\n        number: true,\n    },\n];","\nexport interface PaletteModel {\n  background: string,\n  title: string,\n  icon: string,\n  subtitle: string,\n  arrow: string,\n};\n\n\nexport const Palettes: PaletteModel[] = [\n  { \n    background: \"#ffd303\",\n    title: \"#000\",\n    icon: \"#0336FF\",\n    subtitle: \"#ff0266\",\n    arrow: '#fff',\n  },\n  { \n    background: \"#673ab7\",\n    title: \"#fff\",\n    icon: \"#ffd149\",\n    subtitle: \"#fff\",\n    arrow: 'green',\n  },\n  { \n    background: \"#FD6509\",\n    title: \"#D53829\",\n    icon: \"#842E5C\",\n    subtitle: \"#582540\",\n    arrow: '#1C1C2B',\n  },\n  { \n    background: \"#7E3F36\",\n    title: \"#D53829\",\n    icon: \"#A5C537\",\n    subtitle: \"#582540\",\n    arrow: '#E6D7BB',\n  },\n  { \n    background: \"#463440\",\n    title: \"#E8D895\",\n    icon: \"#CCB125\",\n    subtitle: \"#CA5937\",\n    arrow: '#AE3E4D',\n  },\n  { \n    background: \"#A0363A\",\n    title: \"#CDA188\",\n    icon: \"#4B9ACF\",\n    subtitle: \"#57B6BE\",\n    arrow: '#F9F9F6',\n  },\n  { \n    background: \"#FCA109\",\n    title: \"#F6F288\",\n    icon: \"#19D0FA\",\n    subtitle: \"#FCA109\",\n    arrow: '#17D8DE',\n  },\n  { \n    background: \"#E5322B\",\n    title: \"#F3A321\",\n    icon: \"#D6DA41\",\n    subtitle: \"#2AAA70\",\n    arrow: '#17D8DE',\n  },\n  { \n    background: \"#E12822\",\n    title: \"#E0D06A\",\n    icon: \"#335A52\",\n    subtitle: \"#7A1911\",\n    arrow: '#17D8DE',\n  },\n  { \n    background: \"#DEB15A\",\n    title: \"#F8F4E9\",\n    icon: \"#4A1A25\",\n    subtitle: \"#7A1911\",\n    arrow: '#8D302B',\n  },\n  { \n    background: \"#fff\",\n    title: \"#000\",\n    icon: \"#2D0A57\",\n    subtitle: \"#000\",\n    arrow: '#000',\n  },\n];\n\nexport const getPalette = () => {\n  const next = Palettes[Math.floor(Math.random() * Palettes.length)];\n  return next;\n}","import styled from 'styled-components';\nimport * as bootstrap from 'react-bootstrap';\n\nexport const Container = styled(bootstrap.Container)`\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n\n  background-color: ${({color}) => color ? color : '#ccc' };\n`;\n\nexport const Row = styled(bootstrap.Row)`\n  height: 100vh;\n`;\n\nexport const Col = styled(bootstrap.Col)`\n  align-self: center;\n  text-align: center;\n`;\n","import React, { useState } from 'react';\n\nimport Card from '../../components/Card';\nimport Arrow from '../../components/Arrow';\nimport { Cards } from '../../model/cards';\nimport { PaletteModel, getPalette } from '../../model/palettes';\n\nimport { Container, Row, Col } from './styles';\n\nfunction MainView() {\n  const [current, setCurrent] = useState(0);\n  const [curPalette, setCurPalette] = useState<PaletteModel | undefined>(getPalette());\n\n  let card = Cards[current];\n  \n  const max = Cards.length - 1;\n\n  const moveLeft = () => {\n    const next = current - 1;\n    const value = next < 0 ? max : next;\n\n    setCurPalette(getPalette());\n    setCurrent(value);\n  }\n\n  const moveRight = () => {\n    const next = current + 1;\n    const value = next > max ? 0 : next;\n  \n    setCurrent(value);\n    setCurPalette(getPalette());\n  }\n\n  return (\n    <Container fluid color={curPalette?.background}>\n      <Row>\n        <Col>\n          <Arrow palette={curPalette} direction=\"left\" onClick={moveLeft}/>\n        </Col>\n        \n        <Col xs={6}>\n          <Card \n            palette={curPalette}\n            model={card}\n          />\n        </Col>\n        \n        <Col>\n          <Arrow palette={curPalette} direction=\"right\" onClick={moveRight}/>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default MainView;\n","import styled from 'styled-components';\nimport * as bootstrap from 'react-bootstrap';\n\nexport const Container = styled(bootstrap.Container)`\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n\n  background-color: ${({color}) => color ? color : '#ccc' };\n`;\n\nexport const Row = styled(bootstrap.Row)`\n  height: 100vh;\n`;\n\nexport const Col = styled(bootstrap.Col)`\n  align-self: center;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-weight: bolder;\n  font-size: ${({number}) => number ? '10em' : '4em' };\n  padding-bottom: 40px;\n  color: ${({color}) => color ? color : '#000'};\n  z-index: 2;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, 15%);\n`;\n\nexport const Subtitle = styled.h1`\n  font-size: 2em;\n  padding-top: 60px;\n`;\n\nexport const Image = styled.img`\n    max-width: 20rem;\n    transform: translate(-50%, -50%);\n    top: 50%;\n    position: absolute;\n    left: 50%;\n    box-shadow: 0 8px 50px -6px black;\n    -webkit-box-shadow: 0 8px 25px -6px black;\n`;\n","import React from 'react';\nimport { CardModel } from '../../model/cards';\n\nimport { Title, Subtitle, Image } from './styles';\nimport { PaletteModel } from '../../model/palettes';\n\ntype CardProps = {\n  model: CardModel,\n  palette?: PaletteModel,\n};\n\nconst OctopusCard = ({model, palette}: CardProps) => {\n\n  return (\n    <div>\n      <Title color={palette?.title} number={model.number}>{model.title}</Title>\n      <Image src={process.env.PUBLIC_URL + '/oct.png'} />\n      <Subtitle color={palette?.subtitle}>{model.subtitle}</Subtitle>\n    </div>\n  )\n}\n\nexport default OctopusCard;\n","import React, { useState } from 'react';\n\nimport Arrow from '../../components/Arrow';\nimport { OctopusCards } from '../../model/cards';\nimport { PaletteModel, getPalette } from '../../model/palettes';\n\nimport { Container, Row, Col } from './styles';\nimport OctopusCard from '../../components/OctopusCard';\n\nfunction OctopusView() {\n  const [current, setCurrent] = useState(0);\n  const [curPalette, setCurPalette] = useState<PaletteModel | undefined>(getPalette());\n\n  let card = OctopusCards[current];\n  \n  const max = OctopusCards.length - 1;\n\n  const moveLeft = () => {\n    const next = current - 1;\n    const value = next < 0 ? max : next;\n\n    setCurPalette(getPalette());\n    setCurrent(value);\n  }\n\n  const moveRight = () => {\n    const next = current + 1;\n    const value = next > max ? 0 : next;\n  \n    setCurrent(value);\n    setCurPalette(getPalette());\n  }\n\n  return (\n    <Container fluid color={curPalette?.background}>\n      <Row>\n        <Col>\n          <Arrow palette={curPalette} direction=\"left\" onClick={moveLeft}/>\n        </Col>\n        \n        <Col xs={6}>\n          <OctopusCard \n            palette={curPalette}\n            model={card}\n          />\n        </Col>\n        \n        <Col>\n          <Arrow palette={curPalette} direction=\"right\" onClick={moveRight}/>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default OctopusView;\n","import React from 'react';\nimport { Route, HashRouter } from \"react-router-dom\";\n\nimport './App.css';\nimport MainView from './Views/MainView';\nimport OctopusView from './Views/OctopusView';\n\nconst App = () =>\n  <HashRouter basename=\"/\">\n      <Route path=\"/octopus\" component={OctopusView} />\n      <Route exact path=\"/\" component={MainView} />\n  </HashRouter>;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}